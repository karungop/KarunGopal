{"ast":null,"code":"var _jsxFileName = \"/Users/karungopal/Desktop/HackAthon/KarunGopal/frontend/src/components/projects.jsx\";\n// src/components/Projects.jsx\nimport \"../styles/main.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Projects = () => {\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"projects\",\n    className: \"section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"center-text\",\n      children: \"Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Find Your Spot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Full-stack web platform for discovering campus study locations. I built a RESTful Django backend with complete CRUD functionality and developed a dynamic React frontend with real-time filtering.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Tech:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 10\n        }, this), \" Django, React, PostgreSQL, CSS\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Rate My Professor Sentiment Analysis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Designed a machine learning model to predict professor ratings based on review content and course difficulty metrics. Used DistilBERT to classify sentiment and Pandas to engineer features.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Tech:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 10\n        }, this), \" Python, Transformers, PyTorch, Pandas\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Advisor AI\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Built a chatbot tool that simulates academic advising conversations using the OpenAI API. I implemented secure file upload in Flask and crafted the user interface using React.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Tech:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 10\n        }, this), \" React, Flask, OpenAI API, CSS\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"BookWorm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Created an educational tool for teachers to simplify news articles based on student reading levels. Scraped web content with Beautiful Soup and used the OpenAI API for text simplification.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Tech:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 10\n        }, this), \" Django, Beautiful Soup, OpenAI API, Python\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Homepage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"This very site \\u2014 a modern personal homepage that showcases my work, experience, and goals. Built from scratch with React, custom CSS, and a focus on simplicity and recruiter readability.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Tech:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 10\n        }, this), \" React, HTML, CSS\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 7\n  }, this);\n};\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["jsxDEV","_jsxDEV","Projects","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/karungopal/Desktop/HackAthon/KarunGopal/frontend/src/components/projects.jsx"],"sourcesContent":["// src/components/Projects.jsx\nimport \"../styles/main.css\";\n\nconst Projects = () => {\n  \n  \n    return (\n      <section id=\"projects\" className=\"section\">\n  <h2 className=\"center-text\">Projects</h2>\n  {/* <p className=\"center-text\">Here are a few highlights of what I've built:</p> */}\n\n  {/* <div className=\"projects-grid\"> */}\n    <div className=\"project-card\">\n      <h3>Find Your Spot</h3>\n      <p>\n        Full-stack web platform for discovering campus study locations. I built a RESTful Django backend with complete CRUD functionality and developed a dynamic React frontend with real-time filtering.\n      </p>\n      <p><strong>Tech:</strong> Django, React, PostgreSQL, CSS</p>\n    </div>\n\n    <div className=\"project-card\">\n      <h3>Rate My Professor Sentiment Analysis</h3>\n      <p>\n        Designed a machine learning model to predict professor ratings based on review content and course difficulty metrics. Used DistilBERT to classify sentiment and Pandas to engineer features.\n      </p>\n      <p><strong>Tech:</strong> Python, Transformers, PyTorch, Pandas</p>\n    </div>\n\n    <div className=\"project-card\">\n      <h3>Advisor AI</h3>\n      <p>\n        Built a chatbot tool that simulates academic advising conversations using the OpenAI API. I implemented secure file upload in Flask and crafted the user interface using React.\n      </p>\n      <p><strong>Tech:</strong> React, Flask, OpenAI API, CSS</p>\n    </div>\n\n    <div className=\"project-card\">\n      <h3>BookWorm</h3>\n      <p>\n        Created an educational tool for teachers to simplify news articles based on student reading levels. Scraped web content with Beautiful Soup and used the OpenAI API for text simplification.\n      </p>\n      <p><strong>Tech:</strong> Django, Beautiful Soup, OpenAI API, Python</p>\n    </div>\n\n    <div className=\"project-card\">\n      <h3>Homepage</h3>\n      <p>\n        This very site â€” a modern personal homepage that showcases my work, experience, and goals. Built from scratch with React, custom CSS, and a focus on simplicity and recruiter readability.\n      </p>\n      <p><strong>Tech:</strong> React, HTML, CSS</p>\n    </div>\n  {/* </div> */}\n</section>\n\n    );\n  };\n  \n  export default Projects;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}